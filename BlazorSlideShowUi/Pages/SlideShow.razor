@page "/SlideShow"

@implements IHandle<ImageSelectedMessage>
@inject IEventAggregator Aggregator

<div class="image-container">
    <img class="@GetImage1Class()" src="@image1Location"/>
    <img class="@GetImage2Class()" src="@image2Location"/>
</div>

@code {
    private string image1Location = "images/ceyda-ciftci-3d1hAM0vOLA-unsplash.jpg";
    private string image2Location = "images/daan-evers-tKN1WXrzQ3s-unsplash.jpg";
    private bool showImage1 = true;

    protected override Task OnInitializedAsync()
    {
        Aggregator.Subscribe(this);
        return Task.CompletedTask;
    }

    private string GetImage1Class()
    {
        if (showImage1)
            return "image1-top";
        else
        {
            return "image1 image-hidden";
        }
    }

    private string GetImage2Class()
    {
        if (showImage1 == false)
            return "image2-top";
        else
        {
            return "image2 image-hidden";
        }

    }

    private void DoSwitch()
    {
        showImage1 = !showImage1;
        StateHasChanged();

    }

    public Task HandleAsync(ImageSelectedMessage message)
    {
        var imagePath = "images/" + message.ImagePath;
        if (showImage1)
        {
            image2Location = imagePath;
        }
        else
        {
            image1Location = imagePath;
        }
        InvokeOnRequestThread(DoSwitch);
        return Task.CompletedTask;
    }

    private void InvokeOnRequestThread(Action action)
    {
        InvokeAsync(action);
    }

}
